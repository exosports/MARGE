[MCMC]
# Location of the output directory:
loc_dir = ./example_outputs/

# Tepfile name:
tep_name = ./HD189733b.tep

# Kurucz stellar spectrum file:
kurucz   = ./hd189733b-fp00k2odfnew.pck


# Atmospheric pressure layers: :::::::::::::::::::::::::::::::::::::::
# Pressure filename (.pres extenesion):
press_file = ./HD189733b.pres

# Number of layers:
n_layers = 50

# Pressure at the top of the atmosphere (in bars):
p_top    = 1e-6

# Pressure at the bottom of the atmosphere (in bars):
p_bottom = 100.0

# Use log (True) or linear (False) pressure scale:
log = True


# Elemental-abundances file ::::::::::::::::::::::::::::::::::::::::::
# Basic elemental abundances file:
abun_basic = ../MARGE/modules/BART/inputs/abundances_Asplund2009.txt
# FINDME: in TEA.cfg this parameter is named abun_file.

# Multiplication factor for heavy-element abundances:
solar_times = 1
    
# Swap C/O abundance ratio (True) or not (False):
COswap = False

# Elemental abundances file name (.abn extension):
abun_file = solar1x.abn 


# Temperature profile ::::::::::::::::::::::::::::::::::::::::::::::::

# Set the type of model ('line' or 'madhu'):
PTtype = line
# Set the parameters for the initial profile:
#  Line Etal 2013:  [log10(kappa)  log10(gamma1)  log10(gamma2)  alpha  beta]
#  Madhu Etal 2009 non-inverted:  [a1 a2 p1 p3 T3]
#  Madhu Etal 2009 inverted:      [a1 a2 p1 p2 p3 T3]
PTinit = -3.0  -0.45  1.0  0.0  1.0
#PTinit =  0.993  0.20 0.05 3.0 1700   ; for madhu


# Atmospheric Elemental Abundances (pre-atmospheric) File ::::::::::::
# Pre atmospheric filename (.atm extenstion):
preatm_file = ./HD189733b_preatm.atm

# Elemental species:
in_elem  = H He C N O

# Output species:
#   - MUST use names produced by JANAF.py
#   - see TEA/conversion-record-sort.txt for the correct names
#   - MUST include all elemental species
out_spec = H_g He_ref C_g N_g O_g H2_ref CO_g CO2_g H2O_g CH4_g

# If not None, set uniform mole mixing ratios for each out_spec, e.g.:
uniform = 1e-10 0.149996 1e-10 1e-10 1e-10 0.85 1e-6 1e-6 1e-6 1e-6
#uniform = None

# Atmospheric File (P, T, species-abundances) ::::::::::::::::::::::::
# TEA output file (the 'atmospheric file') name:
atmfile = ./HD189733b.tea


# MCMC arguments :::::::::::::::::::::::::::::::::::::::::::::::::::::

# The fitting function (3-element tuple with function name, module name,
#  and path to module):
# (Absolute path or relative path from loc_dir)
func = hack BARTfunc ../MARGE/lib/datagen/BART/

# List of molecules being fit:
molfit = H2O CO2 CO CH4

# Temperature boundaries:
Tmin =  600.0
Tmax = 3000.0

# The model fitting parameters:
# The 'Mi' parameters are the log10 of an abundance scale factor:
#      log(kappa)  log(g1) log(g2) alpha   beta  log(M1) log(M2) ...
parnames = kappa   g1   g2   alpha  beta  R_p     Mjup SMA   H2O   CO2   CO    CH4
params   = -0.5  -0.2   0.7   0.5   1.0   71492.0 1.0  0.031  0.0   0.0   0.0   0.0
pmin     = -5.0  -2.0  -1.3   0.0   0.5   57193.6 0.8  0.028 -5.1  -5.1  -5.1  -5.1
pmax     =  1.0   2.0   1.3   1.0   1.3  107238.0 1.5  0.033  5.5   5.5   5.5   5.5
stepsize =  0.1   0.1   0.1   0.1   0.1    5000.0 0.1  0.003  0.4   0.4   0.4   0.4

# Total number of MCMC samples (burn-in + final MCMC):
numit       = 100020
# Number of parallel MCMC chains (= number of processors):
nchains     = 3
# Number of burn-in iterations per chain:
burnin      = 0
# MCMC algorithm ('demc' for Differential Evolution or 'mrw' for 
#  Metropolis Random Walk with Gaussian proposals):
walk        = unif
# Perform a least-square fit before the MCMC:
leastsq     = False
# Scale data uncertainties to enforce reduced chi-square == 1:
chisqscale  = False
# Perform the Gelman-Rubin convergence test along the MCMC:
grtest      = False
grexit      = False
# Use MPI for parallel processing:
mpi         = True
# Filename to store the model fit for each MCMC evaluation:
savemodel   = spectra.npy
modelper    = 512
# Make plots:
plots       = False
# MCMC log file:
logfile     = MCMC.log

# Verbosity level (0--20):
verb = 1

# Transit variables ::::::::::::::::::::::::::::::::::::::::::::::::::
# Output transit configuration file name:
tconfig = config_transit.cfg

# Transit line information (TLI) file:
linedb = ./CH4_H2O_CO2_CO_H2_3-36um.tli

# Collision induced absorption file:
csfile    = ../MARGE/modules/BART/modules/transit/inputs/CIA_H2H2_400-7000K.dat
            ./CIA_HITRAN_H2He_0200-9900K_0.5-500um.dat

# Spectrum's lower wavelength boundary (alternatively, use wnhigh):
wnhigh   =  3300
# Spectrum's higher wavelength boundary (alternatively, use wnlow):
wnlow    =  280
# Wavelength unit conversion to cm (default: 1e-4, microns):
wlfct   = 1e-4
# Wavenumber sampling interval:
wndelt  = 2.0
# Wavenumber oversampling factor:
wnosamp = 2160
# Wavenumber unit conversion to cm-1 (default: 1.0, inverse centimeters):
wnfct   = 1.0

# Eclipe or transit observing geometry:
solution = eclipse
# Maximum optical depth to calculate:
toomuch  = 10.0
# Number of HWHM:
nwidth   = 20

# Planetary surface gravity (cm/s^2):
gsurf     = 2187.76162395
# Reference pressure and radius level (surface-ish) where p(r0) = p0:
refpress  = 0.1
refradius = 81357.896

# Opacity lines' strength threshold:
ethresh = 1e-99

# Opacity-grid temperature lower boundary (in Kelvin):
tlow   =  600
# Opacity-grid temperature higher boundary (in Kelvin):
thigh  = 3000
# Opacity-grid temperature sampling interval (in Kelvin):
tempdelt = 150
# Opacity-grid file name:
opacityfile = opacity_example.dat

# Output spectrum file name:
outspec    = ./eclipse_out.dat
# Output file with the radius where the optical depth reached toomuch:
outtoomuch = ./eclipse_toom.dat
# Output file with the samplings info:
outsample  = ./eclipse_samp.dat
outflux    = ./eclipse_flux.dat
