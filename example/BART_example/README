Introduction
============

This directory holds an example of how to run MARGE, using BART for data 
generation. It matches the use case demonstrated in Himes et al. (2020), except
with reduced accuracy to reduce the runtime.

********************************** IMPORTANT **********************************
Executing this in its entirety will take significant compute time and resources

Requirements: >= 4 cores
              >= 4 GB RAM available (recommended system RAM >= 6 GB)
              >= 20 GB free space
Optional    : GPU with >= 4 GB RAM

If using an operating system that is not Linux-based, some aspects of the 
example will likely need to be adjusted.  Users are encouraged to submit 
updates to this example guide via pull requests if they find modifications are 
necessary for certain operating systems.
*******************************************************************************

This example is provided to show users the general workflow of the software.
We recommend that it is adapted to the user's desired use case.


Walkthrough
===========

This section will walk the user through executing the example.

Ensure that the repo's submodules have also been cloned.  
When cloning MARGE, this can be done by
  git clone --recursive https://github.com/exosports/MARGE MARGE/
  cd MARGE/

Follow the User Manual's instructions to create a working conda environment.

Next, build BART:
  make bart

Now, we are ready to begin.
First, we make a directory to run the example and copy the files there:
  mkdir ../run
  cp example/* ../run/.
If the user is running the example from a different setup, file paths will 
need to be altered.

First, download the line lists:
  cd par
  ./get_line_lists.sh
  cd ..

Next, create the TLI file for BART:
  ../MARGE/modules/BART/modules/transit/pylineread/src/pylineread.py -c pyline.cfg
This will take on the order of an hour.

Finally, execute MARGE:
  ../MARGE/MARGE.py MARGE.cfg

It will build the opacity table, generate the data & process it, and then train 
a dense neural network model.  This will take a few hours, depending on the 
CPU/GPU used.


Description of files
====================

BART.cfg -- BART configuration file.  See the BART User Manual for details.

CIA_HITRAN_H2He_0200-9900K_0.5-500um.dat -- H2-He collision-induced absorption
                                            file.

MARGE.cfg -- MARGE configuration file.  See the supplied user manual or 
             readme for details.

hd189733b-fp00k2odfnew.pck -- Kurucz stellar model file.

HD189733b.tep -- Transiting ExoPlanet (TEP) file.  Contains information about 
                 a given extrasolar system.

par/                  -- directory that holds .txt files of URLs where 
                         HITRAN/HITEMP line lists can be downloaded.  
                         Line lists will be downloaded here.
    get_line_lists.sh -- Downloads and extracts the line lists when executed.

pyline.cfg -- Pylineread configuration file to build the TLI file for BART's 
              execution.  See the BART User Manual for details.

xvals.npy -- Contains the wavenumber values associated with each spectrum to 
             be generated.


